---
import PhoneIcon from '../components/PhoneIcon.astro';
import ArrowRightIcon from '../components/ArrowRightIcon.astro';
import PlayIcon from '../components/PlayIcon.astro';
import PauseIcon from '../components/PauseIcon.astro';
import FullscreenIcon from '../components/FullscreenIcon.astro';
---
<section id="hero-section" class="font-sans text-center py-16 px-4 overflow-x-hidden">
  <div class="w-full max-w-7xl mx-auto">
    <div>
      <h1 class="text-5xl md:text-7xl font-bold leading-tight">
        The most advanced<br />
        intelligent<br />
        <span class="text-brand-teal font-script">Dashboard</span>
      </h1>
      <div class="flex flex-col sm:flex-row justify-center items-center gap-4 mt-8">
        <a href="#contact" class="w-full sm:w-auto flex items-center justify-center gap-2 bg-brand-teal text-white font-bold py-3 px-6 rounded-full shadow-lg hover:shadow-xl transition-shadow">
          Contact
          <div class="bg-white text-brand-teal rounded-full p-1">
            <PhoneIcon class="w-5 h-5" />
          </div>
        </a>
        <a href="#about" class="w-full sm:w-auto flex items-center justify-center gap-2 bg-white text-gray-700 font-bold py-3 px-6 rounded-full shadow-lg hover:shadow-xl transition-shadow border border-gray-200">
          Learn more
          <div class="bg-brand-teal text-white rounded-full p-1">
            <ArrowRightIcon class="w-5 h-5" />
          </div>
        </a>
      </div>
    </div>

    <div class="mt-12 container mx-auto">
      <div class="flex flex-wrap lg:flex-nowrap items-center justify-center gap-x-8 gap-y-12">
        <div class="logo-placeholder w-40 shrink-0 order-2 lg:order-1 transition-opacity duration-300">
          <img src="/Opillsv2/eit.png" alt="EIT Logo" class="w-full h-16 object-contain" />
        </div>
        
        <div 
          id="mockup-container" 
          class="w-full max-w-4xl order-1 lg:order-2 rounded-xl border-4 border-gray-300 overflow-hidden relative group"
        >
          <video
            id="mockup-video"
            src="/Opillsv2/wow.mp4"
            poster="/Opillsv2/foto.jpg"
            playsinline
            preload="auto"
            class="w-full h-full object-cover object-top"
          ></video>
          <div id="video-controls" class="absolute bottom-0 left-0 w-full flex items-center gap-4 p-2 md:p-4 bg-black bg-opacity-30 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            <button id="play-pause-btn" class="p-1">
                <PlayIcon id="play-icon" class="w-6 h-6 text-white" />
                <PauseIcon id="pause-icon" class="w-6 h-6 text-white hidden" />
            </button>
            <div id="timeline-container" class="w-full h-1 md:h-2 bg-white bg-opacity-50 rounded cursor-pointer">
                <div id="timeline-progress" class="h-full bg-brand-teal rounded pointer-events-none" style="width: 0%;"></div>
            </div>
            <button id="fullscreen-btn" class="p-1">
                <FullscreenIcon class="w-6 h-6 text-white" />
            </button>
          </div>
        </div>

        <div class="logo-placeholder w-40 shrink-0 order-3 lg:order-3 transition-opacity duration-300">
          <img src="/Opillsv2/avte.png" alt="avte Logo" class="w-full h-16 object-contain" />
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const heroSection = document.getElementById('hero-section');
  if (heroSection) {
    const title = heroSection.querySelector('h1');
    const buttons = heroSection.querySelectorAll('a.w-full');
    const mockupContainer = document.getElementById('mockup-container');
    const mockupVideo = document.getElementById('mockup-video') as HTMLVideoElement;
    const logoPlaceholders = document.querySelectorAll('.logo-placeholder');

    // --- 1. Animación de entrada inicial ---
    const entryTl = gsap.timeline({ defaults: { ease: 'power3.out', duration: 1 } });
    entryTl.from(title, { opacity: 0, y: 30, delay: 0.2 })
           .from(buttons, { opacity: 0, y: 20, stagger: 0.15 }, "-=0.7");

    if (mockupContainer) {
      const flexContainer = mockupContainer.parentElement;

      // --- 2. Animación de scroll (scrub) ---
      if (flexContainer) {
        ScrollTrigger.matchMedia({
          // Escritorio
          "(min-width: 768px)": function() {
            const scrubTl = gsap.timeline({
              scrollTrigger: {
                trigger: heroSection,
                start: "top top",
                end: "bottom center",
                scrub: 1,
              },
              defaults: { ease: "power1.inOut" }
            });
            
            scrubTl.fromTo(mockupContainer, 
              { height: '40vh', scale: 0.9, maskImage: 'linear-gradient(to bottom, black 60%, transparent 100%)' },
              { height: '504px', scale: 1.2, maskImage: 'linear-gradient(to bottom, black 100%, transparent 100%)' }
            )
            .fromTo(mockupVideo, { scale: 1.3 }, { scale: 1 }, "<")
            .to([title, buttons], { opacity: 0, y: -50 }, "<")
            .to(logoPlaceholders, { opacity: 0, width: 0 }, "<")
            .to(flexContainer, { gap: 0 }, "<");
          },
          // Móvil
          "(max-width: 767px)": function() {
            const scrubTl = gsap.timeline({
              scrollTrigger: {
                trigger: heroSection,
                start: "top top",
                end: "bottom center",
                scrub: 1,
              },
              defaults: { ease: "power1.inOut" }
            });
            
            scrubTl.fromTo(mockupContainer, 
              { height: '30vh', scale: 0.9, maskImage: 'linear-gradient(to bottom, black 60%, transparent 100%)' },
              { height: '350px', scale: 1.1, maskImage: 'linear-gradient(to bottom, black 100%, transparent 100%)' } // Más pequeño
            )
            .fromTo(mockupVideo, { scale: 1.3 }, { scale: 1 }, "<")
            .to([title, buttons], { opacity: 0, y: -20 }, "<") // Menos desplazamiento
            .to(logoPlaceholders, { opacity: 0 }, "<");
          }
        });
      }

      // --- 3. Video Player Logic ---
      const playPauseBtn = document.getElementById('play-pause-btn');
      const playIcon = document.getElementById('play-icon');
      const pauseIcon = document.getElementById('pause-icon');
      const timelineContainer = document.getElementById('timeline-container');
      const timelineProgress = document.getElementById('timeline-progress');
      const fullscreenBtn = document.getElementById('fullscreen-btn');

      if (mockupVideo && playPauseBtn && playIcon && pauseIcon && timelineContainer && timelineProgress && fullscreenBtn) {

        // --- Play/Pause Logic ---
        const togglePlay = () => {
          if (mockupVideo.paused) {
            mockupVideo.play();
          } else {
            mockupVideo.pause();
          }
        };

        const updatePlayButton = () => {
          if (mockupVideo.paused) {
            playIcon.classList.remove('hidden');
            pauseIcon.classList.add('hidden');
          } else {
            playIcon.classList.add('hidden');
            pauseIcon.classList.remove('hidden');
          }
        };

        playPauseBtn.addEventListener('click', togglePlay);
        mockupVideo.addEventListener('click', togglePlay);
        mockupVideo.addEventListener('play', updatePlayButton);
        mockupVideo.addEventListener('pause', updatePlayButton);

        // --- Timeline Logic ---
        const updateTimeline = () => {
          const percentage = (mockupVideo.currentTime / mockupVideo.duration) * 100;
          timelineProgress.style.width = `${percentage}%`;
        };

        const seekVideo = (e: MouseEvent) => {
          const rect = timelineContainer.getBoundingClientRect();
          const percent = (e.clientX - rect.left) / rect.width;
          mockupVideo.currentTime = percent * mockupVideo.duration;
        };
        
        timelineContainer.addEventListener('click', seekVideo);
        mockupVideo.addEventListener('timeupdate', updateTimeline);

        // --- Fullscreen Logic ---
        const toggleFullscreen = () => {
          if (!document.fullscreenElement) {
              // Use the video container for fullscreen request
              mockupContainer.requestFullscreen();
          } else {
            if (document.exitFullscreen) {
              document.exitFullscreen();
            }
          }
        };

        fullscreenBtn.addEventListener('click', toggleFullscreen);
      }
    }
  }
</script>

<style>
  #mockup-container:hover #video-controls {
    opacity: 1;
  }
</style>

 