---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import eitLogo from '../assets/eit.png';
import avteLogo from '../assets/avte.png';
import dashboardImage from '../assets/dashboard.png';
---
<section id="hero-section" class="font-sans text-center pt-32 pb-16 overflow-x-hidden">
  <div class="container mx-auto px-8 sm:px-12 md:px-16">
    <div>
      <h1 class="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold leading-tight">
        The most advanced<br />
        intelligent<br />
        <span class="text-brand-teal font-script">Dashboard</span>
      </h1>
      <div class="flex flex-col sm:flex-row justify-center items-center gap-4 mt-8">
        <a href="#contact" class="w-full sm:w-auto flex items-center justify-center gap-2 bg-brand-teal text-white font-bold py-3 px-6 rounded-full shadow-lg hover:shadow-xl transition-shadow">
          Contact
          <div class="bg-white text-brand-teal rounded-full p-1">
            <Icon name="heroicons:phone-20-solid" class="w-5 h-5" />
          </div>
        </a>
        <a href="#mockup-container" class="w-full sm:w-auto flex items-center justify-center gap-2 bg-white text-brand-text font-bold py-3 px-6 rounded-full shadow-lg hover:shadow-xl transition-shadow border border-gray-200">
          Learn more
          <div class="bg-brand-teal text-white rounded-full p-1">
            <Icon name="heroicons:arrow-right-20-solid" class="w-5 h-5" />
          </div>
        </a>
      </div>
    </div>

    <!-- Logos for Mobile -->
    <div class="mt-12 flex items-center justify-center gap-12 lg:hidden">
      <div class="logo-placeholder w-32 shrink-0">
        <Image src={eitLogo} alt="EIT Logo" class="w-full h-16 object-contain" />
      </div>
      <div class="logo-placeholder w-32 shrink-0">
        <Image src={avteLogo} alt="avte Logo" class="w-full h-16 object-contain" />
      </div>
    </div>

    <div class="mt-12 w-full">
      <div class="flex flex-wrap lg:flex-nowrap items-center justify-center gap-x-8 gap-y-12">
        <!-- Desktop Logo Left -->
        <div class="logo-placeholder w-48 shrink-0 order-2 lg:order-1 hidden lg:block">
          <Image src={eitLogo} alt="EIT Logo" class="w-full h-20 object-contain" />
        </div>
        
        <!-- Video for Desktop -->
        <div 
          id="mockup-container" 
          class="w-full order-1 lg:order-2 rounded-xl border-4 border-gray-300 overflow-hidden relative group hidden lg:block"
        >
          <video
            id="mockup-video"
            src="/Opillsv2/wow.mp4"
            poster={dashboardImage.src}
            playsinline
            preload="auto"
            class="w-full h-full object-cover object-center"
          ></video>
          <div id="video-controls" class="absolute bottom-0 left-0 w-full flex items-center gap-4 p-2 md:p-4 bg-black bg-opacity-30 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            <button id="play-pause-btn" class="p-1">
                <Icon name="heroicons:play-20-solid" id="play-icon" class="w-6 h-6 text-white" />
                <Icon name="heroicons:pause-20-solid" id="pause-icon" class="w-6 h-6 text-white hidden" />
            </button>
            <div id="timeline-container" class="w-full h-1 md:h-2 bg-white bg-opacity-50 rounded cursor-pointer">
                <div id="timeline-progress" class="h-full bg-brand-teal rounded pointer-events-none" style="width: 0%;"></div>
            </div>
            <button id="fullscreen-btn" class="p-1">
                <Icon name="heroicons:arrows-pointing-out-20-solid" class="w-6 h-6 text-white" />
            </button>
          </div>
        </div>

        <!-- Static Image for Mobile/Tablet -->
        <div class="w-full order-1 lg:order-2 rounded-xl border-4 border-gray-300 overflow-hidden block lg:hidden">
            <Image src={dashboardImage} alt="oPills Dashboard Mockup" class="w-full h-full object-cover object-center" />
        </div>

        <!-- Desktop Logo Right -->
        <div class="logo-placeholder w-48 shrink-0 order-3 lg:order-3 hidden lg:block">
          <Image src={avteLogo} alt="avte Logo" class="w-full h-20 object-contain" />
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const heroSection = document.getElementById('hero-section');
  if (heroSection) {
    const title = heroSection.querySelector('h1');
    const buttons = heroSection.querySelectorAll('a.w-full');
    const mockupContainer = document.getElementById('mockup-container');
    const mockupVideo = document.getElementById('mockup-video') as HTMLVideoElement;
    const logoPlaceholders = document.querySelectorAll('.logo-placeholder');

    // --- 1. Animación de entrada inicial ---
    const entryTl = gsap.timeline({ defaults: { ease: 'power3.out', duration: 1 } });
    entryTl.from(title, { opacity: 0, y: 30, delay: 0.2 })
           .from(buttons, { opacity: 0, y: 20, stagger: 0.15 }, "-=0.7")
           .from(mockupContainer, { opacity: 0, y: 50, duration: 1.2 }, "-=0.8");

    if (mockupContainer) {
      const flexContainer = mockupContainer.parentElement;

      // --- 2. Animación de scroll (scrub) - ONLY FOR LARGE SCREENS ---
      if (flexContainer) {
        ScrollTrigger.matchMedia({
          "(min-width: 1024px)": function() {
            // Set the initial state of the animation to prevent a jump on scroll start
            gsap.set(mockupContainer, { height: '50vh', scale: 0.85, 'border-radius': '12px' });

            const scrubTl = gsap.timeline({
              scrollTrigger: {
                trigger: heroSection,
                start: "top top",
                end: "bottom center",
                scrub: 1.5,
              },
              defaults: { ease: "power2.inOut" }
            });
            
            scrubTl.to(mockupContainer, 
              { height: '90vh', scale: 1, 'border-radius': '0px', duration: 1 }
            )
            .to([title, buttons], { opacity: 0, y: -60, duration: 0.8 }, "<")
            .to(logoPlaceholders, { opacity: 0, width: 0, duration: 0.8 }, "<")
            .to(flexContainer, { gap: 0, duration: 0.8 }, "<");
            
            // --- Video Player Logic ---
            const playPauseBtn = document.getElementById('play-pause-btn');
            const playIcon = document.getElementById('play-icon');
            const pauseIcon = document.getElementById('pause-icon');
            const timelineContainer = document.getElementById('timeline-container');
            const timelineProgress = document.getElementById('timeline-progress');
            const fullscreenBtn = document.getElementById('fullscreen-btn');

            if (mockupVideo && playPauseBtn && playIcon && pauseIcon && timelineContainer && timelineProgress && fullscreenBtn) {
              const togglePlay = () => mockupVideo.paused ? mockupVideo.play() : mockupVideo.pause();
              const updatePlayButton = () => {
                playIcon.classList.toggle('hidden', !mockupVideo.paused);
                pauseIcon.classList.toggle('hidden', mockupVideo.paused);
              };

              playPauseBtn.addEventListener('click', togglePlay);
              mockupVideo.addEventListener('click', togglePlay);
              mockupVideo.addEventListener('play', updatePlayButton);
              mockupVideo.addEventListener('pause', updatePlayButton);

              const updateTimeline = () => {
                timelineProgress.style.width = `${(mockupVideo.currentTime / mockupVideo.duration) * 100}%`;
              };

              timelineContainer.addEventListener('click', (e: MouseEvent) => {
                const rect = timelineContainer.getBoundingClientRect();
                mockupVideo.currentTime = ((e.clientX - rect.left) / rect.width) * mockupVideo.duration;
              });
              
              mockupVideo.addEventListener('timeupdate', updateTimeline);

              fullscreenBtn.addEventListener('click', () => {
                if (!document.fullscreenElement) {
                  mockupContainer.requestFullscreen();
                } else {
                  document.exitFullscreen();
                }
              });
            }
          },
        });
      }
    }
  }
</script>

 