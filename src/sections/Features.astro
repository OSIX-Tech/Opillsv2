---
// This frontmatter is intentionally left empty.
import BrainIcon from '../components/BrainIcon.astro';
import BuildingIcon from '../components/BuildingIcon.astro';
---

<section id="features" class="py-20 px-6 sm:px-8 md:px-12 font-sans">
  <div class="w-full max-w-7xl mx-auto">
    <!-- Grid responsivo: la altura se calculará automáticamente -->
    <div id="bento-grid" class="grid grid-cols-1 md:grid-cols-3 gap-6">
      
      <!-- Columna Izquierda (1 caja alta) -->
      <div class="bento-box md:row-span-3 bg-teal-100 p-6 rounded-3xl shadow-lg min-h-[200px]"></div>

      <!-- Fila Superior, Col 2-3 (1 caja ancha) -->
      <div class="bento-box md:col-span-2 bg-teal-100 p-6 rounded-3xl shadow-lg min-h-[200px]"></div>
      
      <!-- Columna Central, Fila 2-3 (1 caja vertical) -->
      <div class="bento-box md:row-span-2 bg-teal-100 p-6 rounded-3xl shadow-lg min-h-[200px]"></div>
      
      <!-- Celdas restantes en la columna derecha -->
      <div class="bento-box bg-teal-100 p-6 rounded-3xl shadow-lg min-h-[200px]"></div>
      <div class="bento-box bg-teal-100 p-6 rounded-3xl shadow-lg min-h-[200px]"></div>

    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  const bentoGrid = document.getElementById('bento-grid');
  if (bentoGrid) {
    const bentoBoxes = gsap.utils.toArray('.bento-box') as HTMLElement[];

    ScrollTrigger.matchMedia({
      // Escritorio
      "(min-width: 768px)": function() {
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: bentoGrid,
            start: "top top",
            end: "bottom top",
            toggleActions: "play reverse play reverse",
          },
          defaults: { duration: 1, ease: 'expo.out' }
        });

        if (bentoBoxes.length >= 5) {
          const fromState = (x = 0, y = 0, rotation = 0, clip: string) => ({ opacity: 0, x, y, scale: 0.8, rotation, clipPath: clip });
          tl.from(bentoBoxes[0], fromState(-100, 0, -10, 'inset(0 100% 0 0)'))
            .from(bentoBoxes[1], fromState(0, -100, 5, 'inset(0 0 100% 0)'), "-=0.85")
            .from(bentoBoxes[2], fromState(0, 100, -5, 'inset(100% 0 0 0)'), "-=0.85")
            .from(bentoBoxes[3], fromState(100, 0, 10, 'inset(0 0 0 100%)'), "-=0.85")
            .from(bentoBoxes[4], fromState(100, 100, -5, 'inset(0 0 100% 0)'), "-=0.85");
        }
      },
      // Móvil
      "(max-width: 767px)": function() {
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: bentoGrid,
            start: "top top",
            end: "bottom top",
            toggleActions: "play reverse play reverse",
          },
          defaults: { duration: 0.6, ease: 'power2.out' }
        });

        if (bentoBoxes.length > 0) {
          // Animación más simple y sutil para móvil
          tl.from(bentoBoxes, {
            opacity: 0,
            scale: 0.9,
            y: 30,
            stagger: 0.1
          });
        }
      }
    });
  }
</script>
