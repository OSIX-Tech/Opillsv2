---
import LogoIcon from './LogoIcon.astro';
import { Icon } from 'astro-icon/components';
import { navLinks } from '../lib/navLinks.js';
---

<header id="main-header" class="p-4 fixed top-0 left-0 w-full z-50">
  <nav class="container mx-auto flex items-center justify-between bg-brand-teal text-white py-3 px-4 md:py-2 md:px-6 rounded-full font-sans shadow-lg">
    <!-- Logo and Brand Name -->
    <a href="#page-top" class="flex items-center gap-2 z-20">
      <LogoIcon class="w-8 h-8 text-white" />
      <span class="text-2xl font-bold">oPills</span>
    </a>

    <!-- Desktop Navigation Links -->
    <div class="hidden md:flex items-center gap-x-8 font-script text-2xl">
      {navLinks.map(link => (
        <a href={link.href} class="hover:underline">{link.text}</a>
      ))}
    </div>

    <!-- Desktop Phone Icon -->
    <a href="#contact" class="hidden md:block bg-white text-brand-teal rounded-full p-2">
      <Icon name="heroicons:phone-20-solid" class="w-6 h-6" />
    </a>

    <!-- Mobile Menu Button -->
    <button id="menu-btn" class="z-20 md:hidden" aria-controls="mobile-menu" aria-expanded="false">
      <Icon name="heroicons:bars-3-20-solid" class="w-8 h-8 text-white" />
    </button>
  </nav>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="fixed inset-0 bg-brand-teal z-30 flex-col items-center justify-center hidden" role="dialog" aria-modal="true">
    <button id="close-menu-btn" class="absolute top-8 right-8 z-20">
      <Icon name="heroicons:x-mark-20-solid" class="w-10 h-10 text-white" />
    </button>
    {navLinks.map(link => (
      <a href={link.href} class="mobile-link font-script text-4xl text-white mb-6">{link.text}</a>
    ))}
    <a href="#contact" class="mobile-link flex items-center gap-4 mt-8 border-2 border-white rounded-full py-2 px-6">
      <span class="font-script text-4xl text-white">Contact</span>
      <Icon name="heroicons:phone-20-solid" class="w-8 h-8 text-white" />
    </a>
  </div>
</header>

<script>
  import { gsap } from "gsap";

  const menuBtn = document.getElementById('menu-btn') as HTMLButtonElement;
  const closeMenuBtn = document.getElementById('close-menu-btn') as HTMLButtonElement;
  const mobileMenu = document.getElementById('mobile-menu') as HTMLElement;
  const mobileLinks = gsap.utils.toArray('.mobile-link');

  // Initially hide the menu off-screen and set display to none.
  gsap.set(mobileMenu, { yPercent: -100, display: 'none' });
  gsap.set(mobileLinks, { opacity: 0 });

  const menuTl = gsap.timeline({ 
    paused: true,
    onStart: () => {
      // Before animation starts, make it a flex container.
      mobileMenu.style.display = 'flex';
      menuBtn.setAttribute('aria-expanded', 'true');
    },
    onReverseComplete: () => {
      // After it's hidden, set display to none.
      mobileMenu.style.display = 'none';
      menuBtn.setAttribute('aria-expanded', 'false');
    }
  });

  menuTl.to(mobileMenu, {
    yPercent: 0,
    duration: 0.5,
    ease: 'power2.inOut'
  }).to(mobileLinks, {
    opacity: 1,
    stagger: 0.1,
    duration: 0.4,
    ease: 'power2.out'
  }, "-=0.3");

  menuBtn?.addEventListener('click', () => menuTl.play());
  closeMenuBtn?.addEventListener('click', () => menuTl.reverse());
  mobileLinks.forEach(link => {
    (link as HTMLElement).addEventListener('click', () => menuTl.reverse());
  });

  // --- Entry Animation ---
  gsap.from("#main-header nav", {
    y: -100,
    opacity: 0,
    duration: 1,
    ease: "power3.out",
    delay: 0.5
  });
</script> 